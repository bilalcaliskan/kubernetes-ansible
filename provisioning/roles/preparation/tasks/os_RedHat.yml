---

- name: import variables for RedHat based hosts
  include_vars: "os_{{ ansible_facts['os_family'] }}.yml"
  tags:
  - import
  - preparation

- name: Add IP address of all hosts to "{{ hosts_file_path }}" file
  lineinfile:
    dest: "{{ hosts_file_path }}" 
    line: "{{ ansible_eth1.ipv4.address }} {{ inventory_hostname }}"
    state: present
  with_items: "{{ groups['kubernetes-cluster'] }}"
  tags: kube-dependencies
  
- name: ensure a list of packages installed with optimal way(can be used on apt and yum modules)
  yum:
    name: "{{ required_packages }}"
    state: present
  #loop: "{{ required_packages }}"
  register: install_result
  tags: preparation

- name: disable selinux temporarily
  selinux:
    state: disabled
  register: selinux_tmp_result
  tags: preparation

- name: disable selinux permanently
  template:
    src: "{{ selinux_temp_src_path }}"
    dest: "{{ selinux_temp_dst_path }}"
    owner: root
    group: root
    mode: 0644
  register: selinux_perm_result
  when: selinux_tmp_result is succeeded
  tags: preparation

# enable br_netfilter kernel module to allow kubernetes pods to communicate across the cluster
- name: enable br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  tags: preparation

- name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present
  tags: preparation

- name: ensure net.bridge.bridge-nf-call-iptables is set to 1
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present
  tags: preparation

- name: check if "{{ fstab_path }}" exists
  stat:
    path: "{{ fstab_path }}" 
  register: stat_result
  tags: preparation

- name: remove swapfile from "{{ fstab_path }}"
  mount:
    name: swap
    fstype: swap
    state: absent
  register: remove_fstab_result
  when: stat_result.stat.exists == true
  tags: preparation

- name: disable swap
  command: swapoff -a
  register: disable_swap_result
  when: 
  - ansible_swaptotal_mb > 0
  - remove_fstab_result is succeeded
  tags: preparation

- name: disable service firewalld and ensure it is masked
  systemd:
    name: firewalld
    enabled: no
    masked: yes
  register: disable_firewalld_result
  when: disable_swap_result is succeeded
  tags: preparation


